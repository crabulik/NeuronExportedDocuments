@using NeuronExportedDocuments.Resources
@model NeuronExportedDocuments.Models.DocumentCredentials

<div class="panel-heading">
    @MainMessages.rs_GetNeuronDocument
</div>
<div class="panel-body">
    @using (Html.BeginForm("GetDocument", "Home", new { IsWithCaptcha = Model.IsWithCaptcha }))
    {
        @Html.ValidationSummary(true);
        <div class="form-group">
            @Html.LabelFor(model => model.PublishId, new { @class = "control-label" })
            
            <div class="control-group">
                @Html.TextBox("PublishId", Model.PublishId, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.PublishId, null, new { @class = "help-inline label label-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.PublishPassword, new { @class = "control-label" })
            
            <div class="control-group">
                @Html.TextBox("PublishPassword", Model.PublishPassword, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.PublishPassword, null, new { @class = "help-inline label label-danger" })
            </div>
        </div>
        
        if (Model.IsWithCaptcha)
        {
            
            <div class="control-group">
                <div class="g-recaptcha" id="g-recaptcha"></div>
                @Html.TextBox("GRecaptchaResponse", null, new { @class = "form-control", style = "display:none", autocomplete = "off" })
            </div>
            <br/>

        }
        else
        {

        }
        <button type="submit" class="btn btn-primary">@MainMessages.rs_GetDocument</button>
    }
</div>