@using NeuronExportedDocuments.Resources
@model NeuronExportedDocuments.Models.ViewModels.EditServiceMessageViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="@MainMessages.rs_Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title" id="myModalLabel">@MainMessages.rs_EditServiceMessageCaption</h4>
</div>
<div>
    @using (Ajax.BeginForm("EditServiceMessage", "Admin", FormMethod.Post,
                    new AjaxOptions
                    {
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "POST",
                        UpdateTargetId = "list-of-messages"
                    }))
    {
        
        <div class="modal-body">
            <h5><strong>@Html.DisplayTextFor(model => model.KeyName)</strong></h5>
            @Html.ValidationSummary()
            @Html.AntiForgeryToken()
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(model => model.IsDefault, new { type = "checkbox" }) @Html.LabelFor(model => model.IsDefault, new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.IsDefault, null, new { @class = "help-inline label label-danger" })
                    </label>
                </div>

            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.Message, new { @class = "control-label" })

                <div class="control-group">
                    @Html.TextAreaFor(model => model.Message, new { @class = "form-control", autocomplete = "off", rows = "6" })
                    @Html.ValidationMessageFor(model => model.Message, null, new { @class = "help-inline label label-danger" })
                </div>
            </div>
            
            @if (Model.FormaterKeys.Count > 0)
            {
                <div class="panel panel-info">
                    <div class="panel-heading">@Html.LabelFor(model => model.FormaterKeys)</div>
                    <div class="panel-body" style="max-height: 200px;overflow-y: scroll;">
                        @foreach (var key in Model.FormaterKeys)
                        {
                            <div class="row">
                                <div class="col-md-6"><strong>@key.Key</strong></div>
                                <div class="col-md-6"> - @key.Description</div>
                            </div>
                        }
                    </div>
                </div>
            }
            @Html.HiddenFor(model => model.ServiceMessageId)
            @Html.HiddenFor(model => model.Key)
            @Html.HiddenFor(model => model.BackUrl)
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">@MainMessages.rs_Close</button>
            <button class="btn btn-primary" type="submit">@MainMessages.rs_Save</button>
        </div>
    }
</div>