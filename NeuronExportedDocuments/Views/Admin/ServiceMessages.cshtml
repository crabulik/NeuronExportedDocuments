@using NeuronExportedDocuments.Resources
@using PagedList.Mvc;
@model NeuronExportedDocuments.Models.ViewModels.ServiceMessagesViewModel

@{
    ViewBag.Title = MainMessages.rs_ServiceMessagesList;
    Layout = "~/Views/_AdminLayout.cshtml";
}

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('.edit-message').click(function () {
                var id = $(this).attr('data-id');
                var backUrl = $(this).attr('back-url');
                $.ajax({
                    url: '@Url.Action("EditServiceMessage")', // to get the right path to controller from TableRoutes of Asp.Net MVC
                    dataType: "html", 
                    type: "GET", //to do a post request 
                    contentType: 'application/html; charset=utf-8',
                    cache: false, 
                    data: { id: id, backUrl: backUrl }, // here you can pass arguments to your request if you need
                    success: function (data) {
                        $('#edit-message-container').html(data);
                        $('#edit-message').modal('show');
                    },
                    error: function (xhr, status) {
                        alert(status);
                    }
                });
            });
        });
    </script>
}
@section Body {

    <div class="modal fade" id="edit-message" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content" id="edit-message-container">
        </div>
    </div>
</div>  
    <table class="table table-striped">
    <tr>
        <th>
            @MainMessages.rs_ServiceMessageKeyDisplayName
        </th>
        <th class="text-center">
            @MainMessages.rs_ServiceMessageIsDefaultDisplayName
        </th>
        <th>
            @MainMessages.rs_ServiceMessageMessageDisplayName
        </th>
        <th class="text-center"></th>
    </tr>


    @foreach (var item in Model.List)
    {
        <tr>
            <td class="col-md-4">
                @(Model.ServiceMessages.GetDefaultKeyDisplayName(item.Key))
            </td>
            <td class="col-md-1 text-center">
                @Html.DisplayFor(modelItem => item.IsDefault)
            </td>
            <td class="col-md-6">
                <span style="white-space: pre-line">@((item.IsDefault) ? Model.ServiceMessages.GetDefaultMessage(item.Key) : item.Message)</span>
            </td>
            <td class="col-md-1 text-center">
                <button class="glyphicon glyphicon-edit btn btn-primary edit-message" data-id="@item.ServiceMessageId" back-url="@Request.Url.PathAndQuery"></button>
            </td>
        </tr>
    }

    </table>
    @if (Model.List.PageCount > 1)
    {
        <br />
        <div>@MainMessages.rs_Page @(Model.List.PageCount < Model.List.PageNumber ? 0 : Model.List.PageNumber) of @Model.List.PageCount</div>

        @Html.PagedListPager(Model.List, page => Url.Action("ServiceMessages", new { page }));
    }


}

